package assignment;
import java.util.*;
import java.util.HashMap;
import java.util.Map;

public class Poly {
	//Use Map to store the single variable polynomial terms
	//Key represent Power of variable and Value represent non-zero Coefficient
	private final Map<Integer, Integer> polynomial = new HashMap<Integer, Integer>();
	/**
	 * Constructor to initialize the polynomial map variable.
	 * @param arr:2D array having values of power of variable and its non-zero coefficients. 
	 * @param rows: Number of Terms in the polynomial
	 */
	public Poly(int[][] arr,int terms){
		int i;
		for(i=0;i<terms;i++){
			//if the term is already present then add this term's coefficient to already present term's coefficient
			if(polynomial.containsKey(arr[i][0]))
				//update the existing term
				polynomial.put(arr[i][0],polynomial.get(arr[i][0]+arr[i][1]));
			else
				polynomial.put(arr[i][0], arr[i][1]);
		}
	}
	/**
	 * Another constructor. If we want to create polynomial object with the help of Map then we will use this constructor.
	 * @param poly: Map which is going to bee copied in polynomial instance to make the actual object.
	 */
	public Poly(Map<Integer, Integer> poly){
		polynomial.putAll(poly);
	}
	/**
	 * Prints the polynomial in a structured way
	 */
	public void printPolynomial(){
		for(int i:polynomial.keySet()){
			if(polynomial.get(i)!=1)
				System.out.print(polynomial.get(i)+"x^"+i+"+");
			else
				System.out.print("x^"+i+"+");
		}
		//to overcome the extra "+" generated by above statement
		System.out.print("0");
		System.out.println();
	}
	/**
	 * Evaluates the polynomial for a particular value of x
	 * @param x: Value at which polynomial is going to be evaluated
	 * @return float result of evaluation 
	 */
	public float evaluate(float x){
		float result=0;//to store the result
		for(int i:polynomial.keySet()){
			result+=Math.pow(x, i)*(polynomial.get(i));
		}
		return result;
	}
	/**
	 * Determines the degree of the polynomial
	 * @return degree of polynomial that is coefficient of highest power variable term
	 */
	public int degree(){
		int d=0;//Contains the degree of polynomial. By default it's zero.
		for(int i:polynomial.keySet()){
			if(i>d)
				d=i;
		}
		return d;
	}
	/**
	 * This function will add two polynomials.
	 * @param p1 Polynomial that is going to be added with original polynomial
	 * @return Object of Poly class that will contain the addition of two polynomials
	 */
	public Poly addPoly(Poly p1){
		Map<Integer,Integer> polySum = new HashMap<Integer,Integer>();
		for(int i:this.polynomial.keySet()){
			if(p1.polynomial.containsKey(i))
				polySum.put(i, this.polynomial.get(i)+p1.polynomial.get(i));
			else
				polySum.put(i, this.polynomial.get(i));
		}
		for(int j:p1.polynomial.keySet()){
			if(!this.polynomial.containsKey(j))
				polySum.put(j, p1.polynomial.get(j));
		}
		Poly p2 = new Poly(polySum);
		return p2;
			
	}
	/**
	 * This function will multiply two polynomials.
	 * @param p1  Polynomial that is going to be multiplied with original polynomial
	 * @return Object of Poly class that will contain the multiplication of two polynomials
	 */
	public Poly multiplyPoly(Poly p1){
		Map<Integer,Integer> polyMul = new HashMap<Integer,Integer>();
		for(int i:this.polynomial.keySet()){
			for(int j:p1.polynomial.keySet()){
				int term = i+j;//Multiplying each term of polynomial1 to polynomial2
				int coeffAdd = this.polynomial.get(i)*p1.polynomial.get(j);
				if(polyMul.containsKey(term))
					polyMul.put(term, polyMul.get(term)+coeffAdd);
				else
					polyMul.put(term, coeffAdd);
			}
		}
		Poly p2 = new Poly(polyMul);
		return p2;
	}
	public static void main(String []args){
		System.out.println("Please choose from the following options:");
		System.out.println("1. Evaluate the value of the polynomial for the given value of the variable");
		System.out.println("2. Evaluate the degree of the polynomial");
		System.out.println("3. Add two polynomials");
		System.out.println("4. Multiply two polynomials");
		System.out.println("5. Exit");
		int terms;
		int choice;
		Scanner sc = new Scanner(System.in);
		choice = sc.nextInt();
		if(choice!=5){
		System.out.println("Enter Number of terms in the polynomial:");
		terms = sc.nextInt();
		//Each array will contain two elements first is power of variable and another one is coefficient
		int polyArray1[][] = new int[terms][2];
		System.out.print("Please enter the elements of the polynomial(First Power of variable then its non-zero coefficient):");
		for(int i=0; i<terms; i++){
			for(int j=0; j<2; j++){
				polyArray1[i][j] = sc.nextInt();
			}
		}
		Poly poly1 = new Poly(polyArray1,terms);
		System.out.println("Entered Polynomial is:");
		poly1.printPolynomial();
		switch (choice) {
		case 1:
			float value;
			System.out.println("Enter the value:");
			value = sc.nextFloat();
			System.out.println(poly1.evaluate(value));
			break;
		case 2:
			int degree = poly1.degree();
			System.out.println("Degree of the polynomial is: "+degree);
			break;
		case 3:
			int terms1;
			System.out.println("Enter Number of terms for second polynomial:");
			terms1 = sc.nextInt();
			//Each array will contain two elements first is power of variable and another one is coefficient
			int polyArray2[][] = new int[terms1][2];
			System.out.println("Please enter the elements of Second Polynomial");
			for(int i=0; i<terms1; i++){
				for(int j=0; j<2; j++){
					polyArray2[i][j]=sc.nextInt();
				}
			}
			Poly poly2 = new Poly(polyArray2,terms1);
			System.out.println("Entered Second Polynomiall is:");
			poly2.printPolynomial();
			Poly resultPoly = poly1.addPoly(poly2);
			System.out.println("Result of addition is:");
			resultPoly.printPolynomial();
		case 4:
			int terms2;
			System.out.println("Enter Number of terms for second polynomial:");
			terms2 = sc.nextInt();
			//Each array will contain two elements first is power of variable and another one is coefficient
			int polyArray3[][] = new int[terms2][2];
			System.out.println("Please enter the elements of Second Polynomial");
			for(int i=0; i<terms2; i++){
				for(int j=0; j<2; j++){
					polyArray3[i][j]=sc.nextInt();
				}
			}
			Poly poly3 = new Poly(polyArray3,terms2);
			Poly resultPoly1 = poly1.multiplyPoly(poly3);
			System.out.println("Entered Second Polynomiall is:");
			poly3.printPolynomial();
			System.out.println("Result of Multiplication is:");
			resultPoly1.printPolynomial();
			break;
		default:
			System.out.println("Please enter the correct choice");
			break;
		}
		}
		//closing the scanner object
		sc.close();
	}
}
